library(tidyverse)
library(janitor)
library(infer)
msleep
msleep <- msleep
msleep <- msleep %>%
clean_names()
msleep <- msleep %>%
clean_names() %>%
head()
msleep <- msleep %>%
clean_names() %>%
glimpse()
View(msleep)
msleep
msleep <- ggplot::msleep %>%
clean_names() %>%
glimpse()
msleep <- ggplot2::msleep %>%
clean_names() %>%
glimpse()
View(msleep)
average_sleep_total <- mean(msleep$sleep_total)
null_distribution<- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "hours", mu = 7) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution<- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
View(null_distribution)
View(null_distribution)
average_sleep_total <- mean(msleep$sleep_total)
null_distribution<- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = average_sleep_total) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
View(null_distribution)
null_distribution<- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
View(null_distribution)
View(null_distribution)
null_distribution %>% visualise()
null_distribution %>% visualise(obs_stat = x_bar, direction = "both")
null_distribution %>%
visualise(bin = 30) +
shade_p_value(obs_stat = average_sleep_total, direction = "both")
average_sleep_total <- mean(msleep$sleep_total)
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 12) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualise(bin = 30) +
shade_p_value(obs_stat = average_sleep_total, direction = "both")
average_sleep_total <- mean(msleep$sleep_total)
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 12) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualise(bin = 30) +
shade_p_value(obs_stat = average_sleep_total, direction = "both")
p_value <- null_distribution %>%
get_p_value(obs_stat = average_sleep_total, direction = "both")
p_value
average_sleep_total <- mean(msleep$sleep_total)
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualise(bin = 30) +
shade_p_value(obs_stat = average_sleep_total, direction = "both")
p_value <- null_distribution %>%
get_p_value(obs_stat = average_sleep_total, direction = "both")
p_value
p_value <- null_distribution %>%
get_p_value(obs_stat = average_sleep_total, direction = "both")
p_value
observed_stat_vores <- msleep %>%
specify(vore ~ sleep_total) %>%
observed_stat_vores <- msleep %>%
specify(vore ~ sleep_total) %>%
calculate(stat = "diff in props", order = c("herbi", "omni"))
observed_stat_vores <- msleep %>%
specify(sleep_total ~ vore) %>%
calculate(stat = "diff in props", order = c("herbi", "omni"))
observed_stat_vores <- msleep %>%
specify(sleep_total ~ vore) %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
observed_stat_vores <- msleep %>%
specify(sleep_total ~ vore) %>%
calculate(stat = "diff in props", order = c("omni", "herbi"))
# observed_stat_vores <- msleep %>%
#   specify(sleep_total ~ vore) %>%
#   calculate(stat = "diff in props", order = c("omni", "herbi"))
vore_null_distribution <- msleep %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
vore_null_distribution <- msleep %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in prop", order = c("omni", "herbi"))
# observed_stat_vores <- msleep %>%
#   specify(sleep_total ~ vore) %>%
#   calculate(stat = "diff in props", order = c("omni", "herbi"))
vore_null_distribution <- msleep %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in props", order = c("omni", "herbi"))
# observed_stat_vores <- msleep %>%
#   specify(sleep_total ~ vore) %>%
#   calculate(stat = "diff in props", order = c("omni", "herbi"))
vore_null_distribution <- msleep %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in prop", order = c("omni", "herbi"))
# observed_stat_vores <- msleep %>%
#   specify(sleep_total ~ vore) %>%
#   calculate(stat = "diff in props", order = c("omni", "herbi"))
vore_null_distribution <- msleep %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in counts", order = c("omni", "herbi"))
# observed_stat_vores <- msleep %>%
#   specify(sleep_total ~ vore) %>%
#   calculate(stat = "diff in props", order = c("omni", "herbi"))
vore_null_distribution <- msleep %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
vore_null_distribution <- msleep %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "pair") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
vore_null_distribution <- msleep %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "point") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
vore_null_distribution <- msleep %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
# observed_stat_vores <- msleep %>%
#   specify(sleep_total ~ vore) %>%
#   calculate(stat = "diff in props", order = c("omni", "herbi"))
vore_null_distribution <- msleep %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
vore_msleep <- msleep %>%
select(sleep_total, vore)
View(vore_msleep)
vore_msleep <- msleep %>%
select(sleep_total, vore) %>%
filter(vore = "omni" | vore = "herbi")
vore_msleep <- msleep %>%
select(sleep_total, vore) %>%
filter(vore == "omni" | vore == "herb")
vore_msleep <- msleep %>%
select(sleep_total, vore) %>%
filter(vore == "omni" & vore == "herb")
vore_msleep <- msleep %>%
select(sleep_total, vore) %>%
filter(vore == "omni" || vore == "herb")
vore_msleep <- msleep %>%
select(sleep_total, vore) %>%
filter(vore == "omni" || vore == "herb")
vore_msleep <- msleep %>%
select(sleep_total, vore) %>%
filter(vore == "omni" | vore == "herb")
vore_msleep <- msleep %>%
select(sleep_total, vore) %>%
filter(vore == "omni" | vore == "herbi")
vore_null_distribution <- vore_msleep %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
vore_null_distribution
vore_null_distribution <- msleep %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
vore_p_value <- vore_null_distribution %>%
get_p_value(obs_stat = mean(vore_msleep$sleep_total), direction = "right")
vore_p_value <- vore_null_distribution %>%
get_p_value(obs_stat = mean(vore_msleep$sleep_total), direction = "right")
vore_p_value
vore_p_value <- vore_null_distribution %>%
get_p_value(obs_stat = mean(vore_msleep$sleep_total), direction = "left")
vore_p_value
vore_p_value <- vore_null_distribution %>%
get_p_value(obs_stat = mean(vore_msleep$sleep_total), direction = "both")
vore_p_value
vore_p_value <- vore_null_distribution %>%
get_p_value(obs_stat = mean(vore_msleep$sleep_total), direction = "both")
vore_p_value
vore_p_value <- vore_null_distribution %>%
get_p_value(obs_stat = mean(vore_msleep$sleep_total), direction = "greater")
vore_p_value
vore_p_value <- vore_null_distribution %>%
get_p_value(obs_stat = mean(vore_msleep$sleep_total), direction = "less")
vore_p_value
vore_p_value <- vore_null_distribution %>%
get_p_value(obs_stat = mean(vore_msleep$sleep_total), direction = "both")
vore_p_value
is_domesticated <- msleep %>%
filter(conservation == "domesticated")
is_domesticated <- msleep %>%
filter(conservation == "domesticated") %>%
summarise(nrow())
summarise(nrow(is_domesticated))
nrow(is_domesticated)
is_domesticated <- msleep %>%
filter(conservation == "domesticated") %>%
nrow()
is_domesticated
prob_is_domesticated <- is_domesticated / nrow(msleep)
prob_is_domesticated
is_domesticated <- msleep %>%
filter(conservation == "domesticated")
is_domesticated
prop_is_domesticated <- msleep %>%
specify(conservation) %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000) %>%
calculate(stat = "prop")
prop_is_domesticated <- msleep %>%
specify(is_domesticated$conservation) %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000) %>%
calculate(stat = "prop")
prop_is_domesticated <- msleep %>%
specify(is_domesticated) %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000) %>%
calculate(stat = "prop")
prop_is_domesticated <- msleep %>%
specify(conservation = "domesticated") %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000) %>%
calculate(stat = "prop")
prop_is_domesticated <- msleep %>%
specify(response = conservation, conservation = "conservation") %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000) %>%
calculate(stat = "prop")
prop_is_domesticated <- msleep %>%
specify(response = conservation) %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000) %>%
calculate(stat = "prop")
prop_is_domesticated <- msleep %>%
specify(conservation = vote, success = "domesticated") %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000) %>%
calculate(stat = "prop")
prop_is_domesticated <- msleep %>%
specify(conservation, success = "domesticated") %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000) %>%
calculate(stat = "prop")
prop_is_domesticated <- msleep %>%
specify(success = "domesticated") %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000) %>%
calculate(stat = "prop")
prop_is_domesticated <- is_domesticated %>%
specify(success = "domesticated") %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000) %>%
calculate(stat = "prop")
prop_is_domesticated <- msleep %>%
specify(response = conservation, success = "domesticated") %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000) %>%
calculate(stat = "prop")
prop_is_domesticated <- msleep %>%
specify(response = conservation, success = "domesticated") %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000, type = "draw") %>%
calculate(stat = "prop")
```{r}
is_domesticated <- msleep %>%
mutate(is_domesticated = if_else(conservation == "domesticated", TRUE, FALSE))
View(is_domesticated)
is_domesticated <- msleep %>%
mutate(is_domesticated = if_else(conservation == "domesticated", TRUE, FALSE)) %>%
mutate(is_domesticated = if_else(is_domesticated == NA, FALSE, is_domesticated))
View(is_domesticated)
is_domesticated <- msleep %>%
mutate(is_domesticated = if_else(conservation == "domesticated", TRUE, FALSE)) %>%
mutate(is_domesticated = if_else(is_domesticated == NA, FALSE, is_domesticated))
is_domesticated <- msleep %>%
mutate(conservation = if_else(conservation == "domesticated", "domesticated", "not_domesticated"))
View(is_domesticated)
is_domesticated <- msleep %>%
mutate(conservation = if_else(conservation == "domesticated", "domesticated", "not_domesticated")) %>%
muatate(conservation = coalesce(conservation, "not_domesticated"))
is_domesticated <- msleep %>%
mutate(conservation = if_else(conservation == "domesticated", "domesticated", "not_domesticated")) %>%
mutate(conservation = coalesce(conservation, "not_domesticated"))
prop_is_domesticated <- is_domesticated %>%
specify(response = conservation, success = "domesticated") %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000, type = "draw") %>%
calculate(stat = "prop")
View(prop_is_domesticated)
prop_is_domesticated
length(which(is_domesticated$conservation == domesticated))
length(which(msleep$conservation == "domesticated"))
prop_is_domesticated
domesticated_obs_stat =  length(which(msleep$conservation == "domesticated")) / nrow(msleep$conservation)
prop_is_domesticated_p_value <- prop_is_domesticated %>%
get_p_value(obs_stat = domesticated_obs_stat, direction = "both")
domesticated_obs_stat =  length(which(msleep$conservation == "domesticated")) / nrow(msleep$conservation)
prop_is_domesticated_p_value <- prop_is_domesticated %>%
get_p_value(obs_stat = domesticated_obs_stat, direction = "both")
domesticated_obs_stat =  length(which(msleep$conservation == "domesticated")) / nrow(msleep$conservation)
nrow(msleep$conservation)
length(msleep$conservation)
domesticated_obs_stat =  length(which(msleep$conservation == "domesticated")) / length(msleep$conservation)
domesticated_obs_stat =  length(which(msleep$conservation == "domesticated")) / length(msleep$conservation)
domesticated_obs_stat =  length(which(msleep$conservation == "domesticated")) / length(msleep$conservation)
prop_is_domesticated_p_value <- prop_is_domesticated %>%
get_p_value(obs_stat = domesticated_obs_stat, direction = "both")
length(msleep$conservation)
length(which(msleep$conservation == "domesticated"))
prop_is_domesticated_p_value <- prop_is_domesticated %>%
get_p_value(obs_stat = domesticated_obs_stat, direction = "both")
prop_is_domesticated_p_value <- prop_is_domesticated %>%
get_p_value(obs_stat = domesticated_obs_stat, direction = "both")
prop_is_domesticated_p_value
prop_is_domesticated_p_value <- prop_is_domesticated %>%
get_p_value(obs_stat = domesticated_obs_stat, direction = "greater")
prop_is_domesticated_p_value
prop_is_domesticated_p_value <- prop_is_domesticated %>%
get_p_value(obs_stat = domesticated_obs_stat, direction = "less")
prop_is_domesticated_p_value
prop_is_domesticated_p_value <- prop_is_domesticated %>%
get_p_value(obs_stat = domesticated_obs_stat, direction = "greater")
prop_is_domesticated_p_value
is_domesticated <- msleep %>%
mutate(conservation = if_else(conservation == "domesticated", "domesticated", "not_domesticated")) %>%
mutate(conservation = coalesce(conservation, "not_domesticated"))
prop_is_domesticated <- is_domesticated %>%
specify(response = conservation, success = "domesticated") %>%
hypothesise(null = "point", mu = 0.05) %>%
generate(reps = 10000, type = "draw") %>%
calculate(stat = "prop")
is_domesticated <- msleep %>%
mutate(conservation = if_else(conservation == "domesticated", "domesticated", "not_domesticated")) %>%
mutate(conservation = coalesce(conservation, "not_domesticated"))
prop_is_domesticated <- is_domesticated %>%
specify(response = conservation, success = "domesticated") %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000, type = "draw") %>%
calculate(stat = "prop")
prop_is_domesticated
domesticated_obs_stat =  length(which(msleep$conservation == "domesticated")) / length(msleep$conservation)
prop_is_domesticated_p_value <- prop_is_domesticated %>%
get_p_value(obs_stat = domesticated_obs_stat, direction = "greater")
prop_is_domesticated_p_value
prop_is_domesticated_p_value <- prop_is_domesticated %>%
get_p_value(obs_stat = domesticated_obs_stat, direction = "less")
prop_is_domesticated_p_value
prop_is_domesticated_p_value <- prop_is_domesticated %>%
get_p_value(obs_stat = domesticated_obs_stat, direction = "greater")
prop_is_domesticated_p_value
prop_is_domesticated_p_value <- prop_is_domesticated %>%
get_p_value(obs_stat = domesticated_obs_stat, direction = "left")
prop_is_domesticated_p_value
prop_is_domesticated_p_value <- prop_is_domesticated %>%
get_p_value(obs_stat = domesticated_obs_stat, direction = "right")
prop_is_domesticated_p_value
online_retail <- read_csv(here::here("data/online_retails_subset.csv"))
online_retail <- read_csv(here::here("data/online_retail_subset.csv"))
online_retail_subset <- read_csv(here::here("data/online_retail_subset.csv"))
online_retail_subset <- read_csv(here::here("data/online_retail_subset.csv"))
online_retail <- read_csv(here::here("data/online_retail_subset.csv"))
online_retail_numbers <- read_csv(here::here("data/online_retail_numbers.csv"))
online_retail_numbers <- read_csv(here::here("data/online_retail_numbers.csv"))
library(readxl)
online_retail_numbers <- read_xls(here::here("data/online_retail_numbers.xls"))
online_retail_numbers <- read_csv(here::here("data/online_retail_numbers.csv"))
online_retail_subset <- read_csv(here::here("data/online_retail_subset.csv")) %>%
clean_names()
online_retail <- read_csv(here::here("data/online_retail_subset.csv")) %>%
clean_names()
online_retail_numbers <- read_csv(here::here("data/online_retail_numbers.csv")) %>%
clean_names()
View(online_retail)
View(online_retail)
View(online_retail_subset)
View(online_retail)
prob_by_boss <-30000*0.4 / 30000
prob_by_boss
prob_by_boss <-30000*0.4
prob_by_boss
prob_by_boss <-30000*0.4 / 30000
prob_by_boss
